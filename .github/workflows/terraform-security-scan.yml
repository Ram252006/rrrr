# name: tfsec
# on:
#   push:
#     branches:
#       - main
# jobs:
#   tfsec:
#     name: tfsec sarif report
#     runs-on: ubuntu-latest

#     steps:
#       - name: Clone repo
#         uses: actions/checkout@main

#       - name: tfsec
#         uses: tfsec/tfsec-sarif-action@master
#         with:
#           sarif_file: tfsec.sarif         

#       - name: Upload SARIF file
#         uses: github/codeql-action/upload-sarif@v1
#         with:
#           # Path to SARIF file relative to the root of the repository
#           sarif_file: tfsec.sarif

# name: tfsec-pr-commenter
# on:
#   pull_request:
# jobs:
#   tfsec-pr-commenter:
#     name: tfsec PR commenter
#     runs-on: ubuntu-latest

#     steps:
#       - name: Clone repo
#         uses: actions/checkout@master

#       - name: tfsec
#         uses: tfsec/tfsec-pr-commenter-action@main
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}


# name: tfsec-security-scan

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   tfsec:
#     name: Run tfsec and upload SARIF report
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Check out the repository code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Run tfsec with SARIF output
#       - name: Run tfsec with SARIF output
#         uses: aquasecurity/tfsec-action@v1.0.9 # Update to the latest stable version
#         with:
#           args: --format sarif --out tfsec.sarif .

#       # Step 3: Upload the SARIF report to GitHub to populate Code Scanning Alerts
#       - name: Upload SARIF to GitHub Code Scanning
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: tfsec.sarif

#   tfsec-pr-commenter:
#     name: tfsec PR Commenter
#     runs-on: ubuntu-latest
#     steps:
#       # Step 1: Check out the repository code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Run tfsec and add comments to the PR
#       - name: Run tfsec PR Commenter
#         uses: aquasecurity/tfsec-pr-commenter-action@v1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}

# name: tfsec-security-scan

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   tfsec:
#     name: Run tfsec and upload SARIF report
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout the repository code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Run tfsec and output SARIF file
#       - name: Run tfsec with SARIF output
#         uses: aquasecurity/tfsec-action@v1.0.3
#         with:
#           args: --format sarif --out tfsec.sarif .

#       # Step 3: Upload the SARIF report to GitHub for Code Scanning Alerts
#       - name: Upload SARIF to GitHub Code Scanning
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: tfsec.sarif

#   tfsec-pr-commenter:
#     name: tfsec PR Commenter
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout the repository code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Run tfsec PR Commenter
#       - name: Run tfsec PR Commenter
#         uses: aquasecurity/tfsec-pr-commenter-action@v1.0.3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}




# name: tfsec-security-scan

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   tfsec:
#     name: Run tfsec and upload SARIF report
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout the repository code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Run tfsec and output SARIF
#       - name: Run tfsec with SARIF output
#         uses: aquasecurity/tfsec-action@v1.0.3
#         with:
#           args: --format sarif --out tfsec.sarif .

#       # Step 3: List files to verify SARIF file generation
#       - name: List files
#         run: ls -la

#       # Step 4: Upload the SARIF report to GitHub Code Scanning
#       - name: Upload SARIF to GitHub Code Scanning
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: tfsec.sarif




name: tfsec-security-scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tfsec:
    name: Run tfsec and create GitHub check run
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Run tfsec and output results
      - name: Run tfsec
        id: tfsec
        run: |
          tfsec --format json --out tfsec.json || true
          cat tfsec.json

      # Step 3: Upload JSON file for inspection (Optional)
      - name: Upload JSON file
        uses: actions/upload-artifact@v3
        with:
          name: tfsec-report
          path: tfsec.json

      # Step 4: Create a GitHub Check Run with tfsec results
      - name: Create GitHub Check Run
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const file = fs.readFileSync('tfsec.json', 'utf8');
            const tfsecResults = JSON.parse(file);

            const checkRun = await github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'tfsec Security Scan',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'neutral', // Or 'success', 'failure', or 'cancelled'
              output: {
                title: 'tfsec Security Scan Results',
                summary: tfsecResults.summary,
                text: tfsecResults.details // This can be formatted to show the full report
              }
            });

            console.log(checkRun);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
