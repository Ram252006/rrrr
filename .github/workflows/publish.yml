name: "Publish release"
on:
  release:
    types: [published]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install poetry
  #       run: |
  #         curl -O -sSL https://install.python-poetry.org/install-poetry.py
  #         python install-poetry.py -y --version 1.1.13
  #         echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV
  #         rm install-poetry.py

      # - name: Set up Python
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: '3.9'
      #     cache: 'poetry'
      # - run: |
      #     poetry env use 3.9
      #     poetry install
      # - name: Update pyproject.toml
      #   run: |
      #     LATEST=$(git tag --sort=-creatordate | head -1 | awk '{print substr($0, 2)}')
      #     echo "LATEST=$LATEST" >> $GITHUB_ENV
      #     poetry version $LATEST
      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     commit-message: Update pyproject.toml v"$LATEST"
      #     branch: create-pull-request/release
      #     base: main
      #     delete-branch: true
      #     title: Update pyproject.toml v"$LATEST"
      #     body: |
      #       Update pyproject version
      #       - Auto-generated by [create-pull-request][1]
      #       [1]: https://github.com/peter-evans/create-pull-request
      #     labels: release
      #     assignees: saorio
  # release:
  #   # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'Release ')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.9
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Semantic Release
  #       run: |
  #         pip install python-semantic-release
  #         git config user.name github-actions
  #         git config user.email github-actions@github.com
  #         semantic-release publish
